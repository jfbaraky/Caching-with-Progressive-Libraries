var initBundle,
    _ = require('lodash'),
    gulp = require('gulp'),
    gulpIf = require('gulp-if'),
    browserify = require('browserify'),
    streamify = require('gulp-streamify'),
    uglify = require('gulp-uglify'),
    source = require('vinyl-source-stream'),
    replace = require('gulp-replace'),
    defaultConfig = {
        wait: false,
        minify: false,
        entry: '',
        name: '',
        dest: '',
        extensions: [],
        external: [],
        transform: [],
        paths: [],
        callback: null,
        handleError: function(err) {
            console.log(err.message);
        }
    };

initBundle = function (config, done) {
    var bundle = browserify({
            entries: [config.entry],
            extensions: config.extensions,
            paths: ['./node_modules'].concat(config.paths)
        });
    
    config.external.forEach(function (ex) {
        bundle.external(ex);
    });

    config.transform.forEach(function (tr) {
        bundle.transform(tr);
    });

    bundle.bundle()
        .on('error', function (err) {
            if (done !== null) {
                done(err);
            }
            config.handleError(err);
        })
        .pipe(source( config.name ))
        .pipe(gulpIf( config.minify, streamify(uglify()) ))
        .pipe(gulp.dest( config.dest ))
        .on('end', function () {
            if (done !== null) {
                done();
            }
            if (config.callback !== null) {
                config.callback();
            }
        })
        .on('error', function (err) {
            if (done !== null) {
                done(err);
            }
            config.handleError(err);
        });
};

module.exports = function (config) {
    config = _.assign({}, defaultConfig, config);

    if (config.wait) {
        return function (done) {
            initBundle(config, done);
        }
    } else {
        return function () {
            initBundle(config, null);
        }
    }
};